CREATE TABLE COURSE (
    COURSE_ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(100) NOT NULL,
    MAX_INTAKE INT NOT NULL
);

CREATE TABLE SUBJECT (
    SUBJECT_ID INT PRIMARY KEY,
    SUBJECT_NAME VARCHAR(20) NOT NULL
);

CREATE TABLE INCLUSION (
    COURSE_ID INT,
    SUBJECT_ID INT,
    PRIMARY KEY (COURSE_ID, SUBJECT_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(SUBJECT_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE STUDENT (
    STUDENT_ID INT PRIMARY KEY,
    STUDENT_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE ENROLLMENT (
    STUDENT_ID INT,
    COURSE_ID INT,
    ENROLLMENT_DATE DATE,
    PRIMARY KEY (STUDENT_ID, COURSE_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE MARKS_GRADE (
    STUDENT_ID INT,
    COURSE_ID INT,
    SUBJECT_ID INT,
    GRADE CHAR(2),
    PRIMARY KEY (STUDENT_ID, COURSE_ID, SUBJECT_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(SUBJECT_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
